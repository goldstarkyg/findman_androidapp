package com.findmiin.business.local.manager.utils;import android.content.Context;import android.content.res.AssetManager;import android.os.Environment;import android.widget.Toast;import java.io.File;import java.io.FileInputStream;import java.io.FileOutputStream;import java.io.InputStream;import java.util.ArrayList;public class FileUtils {	public static void copyAssetFileToSDCard(Context context, String assetFilePath, String sdCardFilePath ) {		if( new File(sdCardFilePath).exists() == true )			return;				AssetManager assetMng = context.getAssets();		InputStream is = null;		FileOutputStream fos = null;				try {			is = assetMng.open(assetFilePath);											if( is == null )				return;			fos = new FileOutputStream(sdCardFilePath);						byte buf[] = new byte[2048];						int nLen = 0;			while( (nLen = is.read(buf)) > -1 ) {				fos.write(buf, 0, nLen);			}							}		catch( Exception e ) {			return;		}		finally {			try {				if( is != null )					is.close();				if( fos != null )					fos.close();			} catch ( Exception e ) {			}		}	}		public static final boolean checkExistFile( String path )	{		if( path == null || path.length() < 1 )			return false;				return new File(path).exists();	}	//creates a new file containing file1 + file2 stuck together as such.	public static void  combinePCMFiles(Context context, ArrayList<String> file1,  String outputFile,  String TempPath, String RecPath,int bufferSize) {		FileInputStream  in2 = null;		FileOutputStream out = null;		byte[] data;		long totalAudioLen = 0;		// get total length of out file.		try {			String outputPath = RecPath + outputFile;			out = new FileOutputStream(outputPath);			for(int idx=0; idx < file1.size(); idx++){				String filePath = TempPath + file1.get(idx);				if(checkExistFile(filePath)){					in2 = new FileInputStream(filePath);					long fileSize = in2.getChannel().size();					totalAudioLen += fileSize;					if (in2 != null) {						if(idx > 0)	{in2.skip(6); fileSize = fileSize-6;}						data = new byte[bufferSize];						if (fileSize < bufferSize) {							data = new byte[(int)fileSize];						}						while (in2.read(data) != -1) {							out.write(data);							fileSize -= bufferSize;							if (fileSize <= 0) {								break;							} else if (fileSize < bufferSize) {								data = new byte[(int)fileSize];							}						}					}					in2.close();				}			}			out.close();			String notDeletePath = Environment.getExternalStorageDirectory().getAbsolutePath() + "/"+Const.AUDIO_SAVE_FOLDER + "/";			if(!RecPath .equals(notDeletePath)){ // do not delete not in temp folder				deleteFiles(file1, TempPath);			}		} catch (Exception e) {			Toast.makeText(context,e.toString(),Toast.LENGTH_SHORT).show();		}	}	public static void deleteFiles(ArrayList<String> files, String path){		if(path.equals("") || files.size()==0){			return;		}		for(int idx = 0; idx < files.size(); idx++){			String selectedFilePath = path +  files.get(idx);			if(checkExistFile(selectedFilePath)){				File file = new File(selectedFilePath);				file.delete();			}		}	}}